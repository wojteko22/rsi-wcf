//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceClient.ServiceReference2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.ICallbackKalkulator", CallbackContract=typeof(WcfServiceClient.ServiceReference2.ICallbackKalkulatorCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ICallbackKalkulator {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICallbackKalkulator/Silnia")]
        void Silnia(double n);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICallbackKalkulator/Silnia")]
        System.Threading.Tasks.Task SilniaAsync(double n);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICallbackKalkulator/ObliczCos")]
        void ObliczCos(int sek);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICallbackKalkulator/ObliczCos")]
        System.Threading.Tasks.Task ObliczCosAsync(int sek);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICallbackKalkulatorCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICallbackKalkulator/ZwrotSilnia")]
        void ZwrotSilnia(double result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICallbackKalkulator/ZwrotObliczCos")]
        void ZwrotObliczCos(string result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICallbackKalkulatorChannel : WcfServiceClient.ServiceReference2.ICallbackKalkulator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CallbackKalkulatorClient : System.ServiceModel.DuplexClientBase<WcfServiceClient.ServiceReference2.ICallbackKalkulator>, WcfServiceClient.ServiceReference2.ICallbackKalkulator {
        
        public CallbackKalkulatorClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CallbackKalkulatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CallbackKalkulatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CallbackKalkulatorClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CallbackKalkulatorClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Silnia(double n) {
            base.Channel.Silnia(n);
        }
        
        public System.Threading.Tasks.Task SilniaAsync(double n) {
            return base.Channel.SilniaAsync(n);
        }
        
        public void ObliczCos(int sek) {
            base.Channel.ObliczCos(sek);
        }
        
        public System.Threading.Tasks.Task ObliczCosAsync(int sek) {
            return base.Channel.ObliczCosAsync(sek);
        }
    }
}
